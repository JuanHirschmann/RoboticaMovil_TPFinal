%Función para actualizar la odometría de las particulas en el filtro
%Tiene que tener este nombre porque es llamada por
%robotics.ParticleFilter.predict()
ALPHA_1=0.1;
ALPHA_2=0.1;
ALPHA_3=0.1;
ALPHA_4=0.1;
ALPHA_5=0.1;
ALPHA_6=0.1;
function predictParticles=movement_model(pf,prevParticles,varargin)
    %Utiliza el modelo de movimiento, necesita recibir como argumentos
    %variables las velocodiades y el delta de tiempo.
    %movement_model(pf,prevParticles,velocidad_lineal,velocidad_angular,delta_tiempo)
    
    
    v=varargin{1};
    w=varargin{2};
    time_step=varargin{3};
    display("Use modelo de movimiento")
    predictParticles=prevParticles;
    for row =1:pf.NumParticles
        v_=v+normrnd(0,ALPHA_1*abs(v)+ALPHA_2*abs(w));
        w_=w+normrnd(0,ALPHA_3*abs(v)+ALPHA_4*abs(w));
        s_=normrnd(0,ALPHA_5*abs(v)+ALPHA_6*abs(w));
        theta=predictParticles[row,3]
        predictParticles[row,:]=predictParticles[row,:]+[v_/w_*(sin(theta+time_step)-sin(theta))...]
    
    end
end